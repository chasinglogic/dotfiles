#!/bin/bash
set -o errexit

EXPIRE_ON=$(/bin/date -v+1d '+%Y-%d-%m %H:%M:%S')
INSTANCE_TYPE="m5.large"
AMI_ID=""
EXTRA_FLAGS=""

while getopts ":s:a:n:i:p:" o
do
    case "$o" in
        a) AMI_ID="$OPTARG" ;;
        i) INSTANCE_TYPE="$OPTARG" ;;
        s) EXTRA_FLAGS+=" --security-group-ids $OPTARG" ;;
        n) EXTRA_FLAGS+=" --subnet-id $OPTARG" ;;
        p) EXTRA_FLAGS+=" --profile $OPTARG --region us-east-1" ;;
        \?) echo "Invalid option: -$OPTARG" >&2 ; exit 1 ;;
    esac
done

echo "AMI: $AMI_ID"
echo "EXTRA: $EXTRA_FLAGS"

echo "Launching instance..."
INSTANCE_INFO=$(aws ec2 run-instances --tag-specifications "ResourceType=instance,Tags=[{Key='expire-on',Value='$EXPIRE_ON'}]" \
                    $EXTRA_FLAGS \
                    --instance-type $INSTANCE_TYPE \
                    --key-name mathewrobinson \
                    --image-id $AMI_ID)

echo $INSTANCE_INFO
INSTANCE_ID=$(echo $INSTANCE_INFO | grep InstanceId | grep -o '"i-[0-9A-z]*"' | sed 's/\"//g')
echo "Id: $INSTANCE_ID"
echo "Waiting for instance to become ready..."
while true; do
    STATE=$(aws ec2 describe-instances --instance-id $INSTANCE_ID | jq ".Reservations[0].Instances[0].State.Name")
    if [[ $STATE == *running* ]]; then
        break
    fi
done

echo "Getting PublicDnsName"
DNS_NAME=""
while [[ $DNS_NAME == "" ]]; do
    DNS_NAME=$(aws ec2 describe-instances --instance-id $INSTANCE_ID | jq ".Reservations[0].Instances[0].PublicDnsName" | sed 's/\"//g')
done

echo "Instance ready!"
echo "Hostname: $DNS_NAME"
